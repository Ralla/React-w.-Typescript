{"ast":null,"code":"var _jsxFileName = \"/Users/jakobkruse/Code/blast/blast/src/App.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      // loading: false,\n      matchLines: ''\n    };\n    this.setMatchLines = data => {\n      this.setState({\n        'matchLines': data\n      });\n    };\n  }\n  renderMatch() {\n    const file = require(\"./matchdata/match.txt\");\n    fetch(file).then(response => response.text()).then(data => {\n      console.log(data);\n      this.setMatchLines(data);\n    }).then(() => {\n      //this.loading(false);\n    });\n  }\n  componentDidMount() {\n    this.renderMatch();\n  }\n  render() {\n    console.log('render');\n    var matchLines = this.state.loading == true ? 'loading' : this.state.matchLines;\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: matchLines\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","App","Component","state","matchLines","setMatchLines","data","setState","renderMatch","file","require","fetch","then","response","text","console","log","componentDidMount","render","loading"],"sources":["/Users/jakobkruse/Code/blast/blast/src/App.tsx"],"sourcesContent":["import React from 'react';\n\nclass App extends React.Component {\n// class App extends React.Component {\n//     constructor(props: any) {\n//         super(props);\n//\n//         this.state = {\n//             loading: true,\n//             matchLines: ''\n//         };\n//     }\n    state = {\n        // loading: false,\n        matchLines: '',\n    };\n\n    // loading = (loading: boolean) => {\n    //     this.setState({'loading': loading});\n    //     console.log(this.state);\n    // }\n\n    setMatchLines = (data: string) => {\n        this.setState({'matchLines': data});\n    }\n\n    renderMatch() {\n        const file = require(\"./matchdata/match.txt\");\n\n        fetch(file)\n            .then((response) => response.text())\n            .then((data) => {\n                console.log(data);\n                this.setMatchLines(data);\n            })\n            .then(() => {\n                //this.loading(false);\n            });\n    }\n\n    componentDidMount() {\n        this.renderMatch();\n    }\n\n    render() {\n        console.log('render');\n        var matchLines = this.state.loading == true ? 'loading' : this.state.matchLines;\n\n        return (\n            <ul>\n              { matchLines }\n            </ul>\n        );\n    }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,GAAG,SAASD,KAAK,CAACE,SAAS,CAAC;EAAA;IAAA;IAAA,KAU9BC,KAAK,GAAG;MACJ;MACAC,UAAU,EAAE;IAChB,CAAC;IAAA,KAODC,aAAa,GAAIC,IAAY,IAAK;MAC9B,IAAI,CAACC,QAAQ,CAAC;QAAC,YAAY,EAAED;MAAI,CAAC,CAAC;IACvC,CAAC;EAAA;EAEDE,WAAW,GAAG;IACV,MAAMC,IAAI,GAAGC,OAAO,CAAC,uBAAuB,CAAC;IAE7CC,KAAK,CAACF,IAAI,CAAC,CACNG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEN,IAAI,IAAK;MACZS,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;MACjB,IAAI,CAACD,aAAa,CAACC,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDM,IAAI,CAAC,MAAM;MACR;IAAA,CACH,CAAC;EACV;EAEAK,iBAAiB,GAAG;IAChB,IAAI,CAACT,WAAW,EAAE;EACtB;EAEAU,MAAM,GAAG;IACLH,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,IAAIZ,UAAU,GAAG,IAAI,CAACD,KAAK,CAACgB,OAAO,IAAI,IAAI,GAAG,SAAS,GAAG,IAAI,CAAChB,KAAK,CAACC,UAAU;IAE/E,oBACI;MAAA,UACIA;IAAU;MAAA;MAAA;MAAA;IAAA,QACT;EAEb;AACJ;AAEA,eAAeH,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}