{"ast":null,"code":"import React from 'react';\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      // loading: false,\n      matchLines: []\n    };\n    this.setMatchLines = data => {\n      //this.setState({'matchLines': data});\n\n      var lines = data.split('\\n');\n      var reversed = data.split(\"\").reverse().join(\"\");\n      var index = data.indexOf('Match_Start'); // => 18\n      var tempString = data.substring(0, index);\n      var lineNumber = tempString.split('\\n').length;\n      console.log(lineNumber);\n      return;\n      const matchLines = [];\n      for (var line = 0; line < lines.length; line++) {\n        let currentLine = lines[line].substring(24);\n        let isPlayer = currentLine.includes('STEAM_');\n        let isPertinent = currentLine.match(/killed|kk|until/);\n        let team = '';\n        if (!isPertinent) {\n          console.log(currentLine);\n          continue;\n        }\n        if (isPlayer) {\n          team = currentLine.includes('<CT>') ? 'CT' : 'T';\n        }\n        if (currentLine.match(/killed|till|until/)) {}\n        let lineObject = {\n          'isPlayer': isPlayer,\n          'team': team,\n          'type': 'type..',\n          'raw': currentLine\n        };\n        matchLines.push(lineObject);\n      }\n\n      //console.log(matchLines);\n      //this.state.matchLines = matchLines;\n    };\n  }\n\n  renderMatch() {\n    console.log('renderMatch');\n    const file = require(\"./matchdata/match.txt\");\n    fetch(file).then(response => response.text()).then(data => {\n      this.setMatchLines(data);\n    });\n  }\n  componentDidMount() {\n    this.renderMatch();\n  }\n  render() {\n    return 'kk';\n  }\n}\nexport default App;","map":{"version":3,"names":["React","App","Component","state","matchLines","setMatchLines","data","lines","split","reversed","reverse","join","index","indexOf","tempString","substring","lineNumber","length","console","log","line","currentLine","isPlayer","includes","isPertinent","match","team","lineObject","push","renderMatch","file","require","fetch","then","response","text","componentDidMount","render"],"sources":["/Users/jakobkruse/Code/blast/blast/src/App.tsx"],"sourcesContent":["import React from 'react';\n\ninterface MatchLine {\n    isPlayer: boolean;\n    team: string;\n    type: string;\n    raw: string;\n}\n\nclass App extends React.Component {\n// class App extends React.Component {\n//     constructor(props: any) {\n//         super(props);\n//\n//         this.state = {\n//             loading: true,\n//             matchLines: ''\n//         };\n//     }\n    state = {\n        // loading: false,\n        matchLines: [],\n    };\n\n    // loading = (loading: boolean) => {\n    //     this.setState({'loading': loading});\n    //     console.log(this.state);\n    // }\n\n    setMatchLines = (data: string) => {\n        //this.setState({'matchLines': data});\n\n        var lines = data.split('\\n');\n\n        var reversed = data.split(\"\").reverse().join(\"\");\n        var index = data.indexOf('Match_Start'); // => 18\n        var tempString = data.substring(0, index);\n        var lineNumber = tempString.split('\\n').length;\n\n        console.log(lineNumber);\n        return;\n\n\n        const matchLines : MatchLine[] = [];\n\n        for (var line = 0; line < lines.length; line++) {\n            let currentLine = lines[line].substring(24);\n            let isPlayer = currentLine.includes('STEAM_');\n            let isPertinent = currentLine.match(/killed|kk|until/);\n            let team = '';\n\n            if (!isPertinent) {\n                console.log(currentLine);\n                continue;\n            }\n\n            if (isPlayer) {\n                team = currentLine.includes('<CT>') ? 'CT' : 'T';\n            }\n\n            if (currentLine.match(/killed|till|until/)) {\n\n            }\n\n            let lineObject: MatchLine = {\n                'isPlayer': isPlayer,\n                'team': team,\n                'type': 'type..',\n                'raw': currentLine,\n            }\n\n            matchLines.push(lineObject);\n        }\n\n        //console.log(matchLines);\n        //this.state.matchLines = matchLines;\n    }\n\n    renderMatch() {\n        console.log('renderMatch');\n        const file = require(\"./matchdata/match.txt\");\n\n        fetch(file)\n            .then((response) => response.text())\n            .then((data) => {\n                this.setMatchLines(data);\n            });\n    }\n\n    componentDidMount() {\n        this.renderMatch();\n    }\n\n    render() {\n        return (\n            'kk'\n        );\n    }\n}\n\nexport default App;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AASzB,MAAMC,GAAG,SAASD,KAAK,CAACE,SAAS,CAAC;EAAA;IAAA;IAAA,KAU9BC,KAAK,GAAG;MACJ;MACAC,UAAU,EAAE;IAChB,CAAC;IAAA,KAODC,aAAa,GAAIC,IAAY,IAAK;MAC9B;;MAEA,IAAIC,KAAK,GAAGD,IAAI,CAACE,KAAK,CAAC,IAAI,CAAC;MAE5B,IAAIC,QAAQ,GAAGH,IAAI,CAACE,KAAK,CAAC,EAAE,CAAC,CAACE,OAAO,EAAE,CAACC,IAAI,CAAC,EAAE,CAAC;MAChD,IAAIC,KAAK,GAAGN,IAAI,CAACO,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;MACzC,IAAIC,UAAU,GAAGR,IAAI,CAACS,SAAS,CAAC,CAAC,EAAEH,KAAK,CAAC;MACzC,IAAII,UAAU,GAAGF,UAAU,CAACN,KAAK,CAAC,IAAI,CAAC,CAACS,MAAM;MAE9CC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;MACvB;MAGA,MAAMZ,UAAwB,GAAG,EAAE;MAEnC,KAAK,IAAIgB,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGb,KAAK,CAACU,MAAM,EAAEG,IAAI,EAAE,EAAE;QAC5C,IAAIC,WAAW,GAAGd,KAAK,CAACa,IAAI,CAAC,CAACL,SAAS,CAAC,EAAE,CAAC;QAC3C,IAAIO,QAAQ,GAAGD,WAAW,CAACE,QAAQ,CAAC,QAAQ,CAAC;QAC7C,IAAIC,WAAW,GAAGH,WAAW,CAACI,KAAK,CAAC,iBAAiB,CAAC;QACtD,IAAIC,IAAI,GAAG,EAAE;QAEb,IAAI,CAACF,WAAW,EAAE;UACdN,OAAO,CAACC,GAAG,CAACE,WAAW,CAAC;UACxB;QACJ;QAEA,IAAIC,QAAQ,EAAE;UACVI,IAAI,GAAGL,WAAW,CAACE,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,GAAG;QACpD;QAEA,IAAIF,WAAW,CAACI,KAAK,CAAC,mBAAmB,CAAC,EAAE,CAE5C;QAEA,IAAIE,UAAqB,GAAG;UACxB,UAAU,EAAEL,QAAQ;UACpB,MAAM,EAAEI,IAAI;UACZ,MAAM,EAAE,QAAQ;UAChB,KAAK,EAAEL;QACX,CAAC;QAEDjB,UAAU,CAACwB,IAAI,CAACD,UAAU,CAAC;MAC/B;;MAEA;MACA;IACJ,CAAC;EAAA;;EAEDE,WAAW,GAAG;IACVX,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1B,MAAMW,IAAI,GAAGC,OAAO,CAAC,uBAAuB,CAAC;IAE7CC,KAAK,CAACF,IAAI,CAAC,CACNG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAE3B,IAAI,IAAK;MACZ,IAAI,CAACD,aAAa,CAACC,IAAI,CAAC;IAC5B,CAAC,CAAC;EACV;EAEA8B,iBAAiB,GAAG;IAChB,IAAI,CAACP,WAAW,EAAE;EACtB;EAEAQ,MAAM,GAAG;IACL,OACI,IAAI;EAEZ;AACJ;AAEA,eAAepC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}